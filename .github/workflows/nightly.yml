name: Nightly Tests

on:
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  comprehensive-tests:
    name: Comprehensive Cross-Runtime Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 22]
        bun-version: [latest, '1.0.0']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun ${{ matrix.bun-version }}
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: bun install

    - name: Run unit tests (Bun)
      run: bun test

    - name: Test bunosh initialization (Bun)
      run: |
        mkdir -p temp-test-bun
        cd temp-test-bun
        bun ../bunosh.js init
        bun ../bunosh.js hello:world
        cd ..
        rm -rf temp-test-bun
      shell: bash

    - name: Test bunosh initialization (Node.js)
      run: |
        mkdir -p temp-test-node
        cd temp-test-node
        node ../bunosh.js init
        node ../bunosh.js hello:world
        cd ..
        rm -rf temp-test-node
      shell: bash

    - name: Run e2e tests (Bun runtime)
      run: |
        export BUNOSH_RUNTIME=bun
        npm run test:e2e
      env:
        CI: true
        FORCE_COLOR: 1

    - name: Run e2e tests (Node.js runtime)
      run: |
        export BUNOSH_RUNTIME=node
        npx vitest run test/e2e
      env:
        CI: true
        FORCE_COLOR: 1

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: nightly-results-${{ matrix.os }}-node${{ matrix.node-version }}-bun${{ matrix.bun-version }}
        path: |
          test-results/
          coverage/
        retention-days: 3

  performance-tests:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install dependencies
      run: bun install

    - name: Create performance test script
      run: |
        mkdir -p perf-test
        cd perf-test
        cat > Bunoshfile.js << 'EOF'
        export async function perfTest() {
          const start = Date.now();
          await exec`echo "Performance test"`;
          const end = Date.now();
          console.log(`Execution time: ${end - start}ms`);
        }
        EOF

    - name: Benchmark Bun runtime
      run: |
        cd perf-test
        echo "=== Bun Runtime Performance ==="
        time bun ../bunosh.js perf:test
        cd ..

    - name: Benchmark Node.js runtime
      run: |
        cd perf-test
        echo "=== Node.js Runtime Performance ==="
        time node ../bunosh.js perf:test
        cd ..
        rm -rf perf-test

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [comprehensive-tests, performance-tests]
    if: always()
    
    steps:
    - name: Create summary
      run: |
        echo "## Nightly Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.comprehensive-tests.result }}" == "success" ]; then
          echo "✅ **Comprehensive Tests:** All platforms and runtime combinations passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Comprehensive Tests:** Some combinations failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.performance-tests.result }}" == "success" ]; then
          echo "✅ **Performance Tests:** Benchmarks completed successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Performance Tests:** Benchmark issues detected" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Matrix Coverage" >> $GITHUB_STEP_SUMMARY
        echo "- **Operating Systems:** Ubuntu, macOS, Windows" >> $GITHUB_STEP_SUMMARY
        echo "- **Node.js Versions:** 18.x, 20.x, 22.x" >> $GITHUB_STEP_SUMMARY
        echo "- **Bun Versions:** Latest, 1.0.0" >> $GITHUB_STEP_SUMMARY
        echo "- **Runtime Compatibility:** Bun ↔ Node.js cross-testing" >> $GITHUB_STEP_SUMMARY